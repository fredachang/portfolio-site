/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 Zipv2.glb --transform -types
*/

import * as THREE from "three";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    zip_base: THREE.Mesh;
    zip_hook: THREE.Mesh;
    zip_string: THREE.Mesh;
    Cube: THREE.Mesh;
  };
  materials: {
    ["green metal"]: THREE.MeshStandardMaterial;
    ["green metal.001"]: THREE.MeshStandardMaterial;
    ["zip fabric"]: THREE.MeshStandardMaterial;
    ["black plastic"]: THREE.MeshStandardMaterial;
  };
};

export function ZipTest(props: any) {
  const { nodes, materials } = useGLTF(
    "/models/Zipv2-transformed.glb"
  ) as GLTFResult;

  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.zip_base.geometry}
        material={materials["green metal"]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.zip_hook.geometry}
        material={materials["green metal.001"]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.zip_string.geometry}
        material={materials["zip fabric"]}
      >
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube.geometry}
          material={materials["black plastic"]}
        />
      </mesh>
    </group>
  );
}

useGLTF.preload("/models/Zipv2-transformed.glb");
